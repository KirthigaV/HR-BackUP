package com.homedepot.hr.hr.staffingforms.dto;
/* 
 * This program is proprietary to The Home Depot and is not to be
 * reproduced, used, or disclosed without permission of:
 *    
 *  The Home Depot
 *  2455 Paces Ferry Road, N.W.
 *  Atlanta, GA 30339-4053
 *
 * File Name: AvailabilityBlock.java
 * Application: RetailStaffing
 */
import java.io.Serializable;
import java.sql.Timestamp;

import com.thoughtworks.xstream.annotations.XStreamAlias;

/**
 * This class represents represent a block of interview availability. This may represent
 * a single interview slot or multiple interview slots.
 * <br>
 * Using the XStream API to marshal this object into an XML will produce the following
 * format:<br>
 * <br>
 * <code>
 * &lt;availabilityBlock&gt;<br>
 * &nbsp;&lt;calendarId&gt;&lt;/calendarId&gt;<br>
 * &nbsp;&lt;beginTimestamp&gt;&lt;/beginTimestamp&gt;<br>
 * &nbsp;&lt;endTimestamp&gt;&lt;/endTimestamp&gt;<br>
 * &nbsp;&lt;storeNumber&gt;&lt;/storeNumber&gt;<br>
 * &nbsp;&lt;numberOfInterviewers&gt;&lt;/numberOfInterviewers&gt;<br>
 * &nbsp;&lt;numberOfWeeksRecurring&gt;&lt;/numberOfWeeksRecurring&gt;<br>
 * &lt;/availabilityBlock&gt;<br>
 * </code>
 * <br>
 * Only non-null member variables will be present in the XML generated by
 * the XStream API.
 */
@XStreamAlias("availabilityBlock")
public class AvailabilityBlock implements Serializable
{
    private static final long serialVersionUID = 2594652639076896550L;

    /** calendar id */
    @XStreamAlias("calendarId")
    private int mCalendarId;
    /** block begin date/time */
    @XStreamAlias("beginTimestamp")
    private Timestamp mBgnTs;
    /** block end date/time */
    @XStreamAlias("endTimestamp")
    private Timestamp mEndTs;
    /** store number */
    @XStreamAlias("storeNumber")
    private String mStoreNbr;
    /** number of concurrent interviewers */
    @XStreamAlias("numberOfInterviewers")
    private short mNumIntrvwrs;
    /** number of re-occurring weeks */
    @XStreamAlias("numberOfWeeksRecurring")
    private short mWeeksRecurring;
    
    /**
     * @return the calendar id
     */
    public int getCalendarId()
    {
    	return mCalendarId;
    } // end function getCalendarId()
    
    /**
     * @param calendarId the calendar id
     */
    public void setCalendarId(int calendarId)
    {
    	mCalendarId = calendarId;
    } // end function setCalendarId()
    
    /**
     * @return block begin date/time
     */
    public Timestamp getBgnTs()
    {
    	return mBgnTs;
    } // end function getBgnTs()
    
    /**
     * @param bgnTs block begin date/time
     */
    public void setBgnTs(Timestamp bgnTs)
    {
    	mBgnTs = bgnTs;
    } // end function setBgnTs()
    
    /**
     * @return block end date/time
     */
    public Timestamp getEndTs()
    {
    	return mEndTs;
    } // end function getEndTs()
    
    /**
     * @param endTs block end date/time
     */
    public void setEndTs(Timestamp endTs)
    {
    	mEndTs = endTs;
    } // end function setEndTs()
    
    /**
     * @return store number
     */
    public String getStoreNbr()
    {
    	return mStoreNbr;
    } // end function getStoreNbr()
    
    /**
     * @param storeNbr store number
     */
    public void setStoreNbr(String storeNbr)
    {
    	mStoreNbr = storeNbr;
    } // end function setStoreNbr()
    
    /**
     * @return number of concurrent interviewers
     */
    public short getNumIntrvwrs()
    {
    	return mNumIntrvwrs;
    } // end function getNumIntrvwrs()
    
    /**
     * @param numIntrvwrs number of concurrent interviewers
     */
    public void setNumIntrvwrs(short numIntrvwrs)
    {
    	mNumIntrvwrs = numIntrvwrs;
    } // end function setNumIntrvwrs()
    
    /**
     * @return number of re-occurring weeks
     */
    public short getWeeksRecurring()
    {
    	return mWeeksRecurring;
    } // end function getWeeksRecurring()
    
    /**
     * @param weeksRecurring number of re-occurring weeks
     */
    public void setWeeksRecurring(short weeksRecurring)
    {
    	mWeeksRecurring = weeksRecurring;
    } // end function setWeeksRecurring()
} // end class AvailabilityBlock