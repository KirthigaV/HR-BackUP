package com.homedepot.hr.hr.retailstaffing.services.response;
/* 
 * This program is proprietary to The Home Depot and is not to be
 * reproduced, used, or disclosed without permission of:
 *    
 *  The Home Depot
 *  2455 Paces Ferry Road, N.W.
 *  Atlanta, GA 30339-4053
 *
 * File Name: StatusResponse.java
 * Application: RetailStaffing
 */

import java.util.ArrayList;
import java.util.List;

import com.homedepot.hr.hr.retailstaffing.dto.Status;

import com.thoughtworks.xstream.annotations.XStreamAlias;

/**
 * Response object that will be populated and returned whenever a call to the StatusService
 * is invoked. Using the XStream API to marshal this object into an XML will produce the following
 * format:<br>
 * <br>
 * <code>
 * &lt;statusResponse&gt;<br>
 * &nbsp;&lt;error&gt;&lt;/error&gt;<br>
 * &nbsp;&lt;phoneScreenStats&gt;<br>
 * &nbsp;&nbsp;&lt;status&gt;&lt;/status&gt;<br>
 * &nbsp;&nbsp;&lt;status&gt;&lt;/status&gt;<br>
 * &nbsp;&nbsp;...<br>
 * &nbsp;&lt;/phoneScreenStats&gt;<br> 
 * &nbsp;&lt;interviewStats&gt;<br>
 * &nbsp;&nbsp;&lt;status&gt;&lt;/status&gt;<br>
 * &nbsp;&nbsp;&lt;status&gt;&lt;/status&gt;<br>
 * &nbsp;&nbsp;...<br>
 * &nbsp;&lt;/interviewStats&gt;<br>
 * &nbsp;&lt;materialsStats&gt;<br>
 * &nbsp;&nbsp;&lt;status&gt;&lt;/status&gt;<br>
 * &nbsp;&nbsp;&lt;status&gt;&lt;/status&gt;<br>
 * &nbsp;&nbsp;...<br>
 * &nbsp;&lt;/materialsStats&gt;<br>
 * &nbsp;&lt;requisitionStats&gt;<br>
 * &nbsp;&nbsp;&lt;status&gt;&lt;/status&gt;<br>
 * &nbsp;&nbsp;&lt;status&gt;&lt;/status&gt;<br>
 * &nbsp;&nbsp;...<br>
 * &nbsp;&lt;/requisitionStats&gt;<br>
 * &lt;/statusResponse&gt;<br>
 * </code>
 * <br>
 * Only non-null member variables will be present in the XML generated by the XStream API.<br>
 * <br>
 * @see Response
 * @see Status
 */
@XStreamAlias("statusResponse")
public class StatusResponse extends Response
{
    private static final long serialVersionUID = 6480848864934297111L;

    /** collection of phone screen status objects */
    @XStreamAlias("phoneScreenStats")
    private List<Status> mPhoneScreenStats;
    /** collection of interview status objects */
    @XStreamAlias("interviewStats")
    private List<Status> mInterviewStats;
    /** collection of interview materials status objects */
    @XStreamAlias("materialsStats")
    private List<Status> mMaterialsStats;
    /** collection of requisition status objects */
    @XStreamAlias("requisitionStats")
    private List<Status> mRequisitionStats;

    /**
     * @return collection of phone screen status objects
     */
    public List<Status> getPhoneScreenStats()
    {
    	return mPhoneScreenStats;    	
    } // end function getPhoneScreenStats()
    
    /**
     * @param stats collection of phone screen status objects
     */
    public void setPhoneScreenStats(List<Status> stats)
    {
    	mPhoneScreenStats = stats;
    } // end function setPhoneScreenStats()
    
    /**
     * @param status phone screen status object
     */
    public void addPhoneScreenStat(Status status)
    {
    	if(mPhoneScreenStats == null)
    	{
    		mPhoneScreenStats = new ArrayList<Status>();
    	} // end if(mPhoneScreenStats == null)
    	
    	mPhoneScreenStats.add(status);
    } // end function addPhoneScreenStat()
    
    /**
     * @return collection of interview status objects
     */
    public List<Status> getInterviewStats()
    {
    	return mInterviewStats;
    } // end function getInterviewStats()
    
    /**
     * @param stats collection of interview status objects
     */
    public void setInterviewStats(List<Status> stats)
    {
    	mInterviewStats = stats;
    } // end function setInterviewStats()
    
    /**
     * @param status interview status object
     */
    public void addInterviewStat(Status status)
    {
    	if(mInterviewStats == null)
    	{
    		mInterviewStats = new ArrayList<Status>();
    	} // end if(mInterviewStats == null)
    	
    	mInterviewStats.add(status);
    } // end function addInterviewStat()
    
    /**
     * @return collection of interview materials status objects
     */
    public List<Status> getMaterialsStats()
    {
    	return mMaterialsStats;
    } // end function getMaterialsStats()
    
    /**
     * @param stats collection of interview materials status objects
     */
    public void setMaterialsStats(List<Status> stats)
    {
    	mMaterialsStats = stats;
    } // end function setMaterialsStats()
    
    /**
     * @param status interview materials status object
     */
    public void addMaterialsStat(Status status)
    {
    	if(mMaterialsStats == null)
    	{
    		mMaterialsStats = new ArrayList<Status>();
    	} // end if(mMaterialsStats == null)
    	
    	mMaterialsStats.add(status);
    } // end function addMaterialsStat()    
    
    /**
     * @return collection of requisition status objects
     */
    public List<Status> getRequisitionStats()
    {
    	return mRequisitionStats;
    } // end function getRequisitionStats()
    
    /**
     * @param stats collection of requisition status objects
     */
    public void setRequisitionStats(List<Status> stats)
    {
    	mRequisitionStats = stats;
    } // end function setRequisitionStats()
    
    /**
     * @param status requisition status object
     */
    public void addRequisitionStats(Status status)
    {
    	if(mRequisitionStats == null)
    	{
    		mRequisitionStats = new ArrayList<Status>();
    	} // end if(mRequisitionStats == null)
    	
    	mRequisitionStats.add(status);
    } // end function addRequisitionStats()        
} // end class StatusResponse