package com.homedepot.hr.hr.retailstaffing.dto;
/* 

 * This program is proprietary to The Home Depot and is not to be
 * reproduced, used, or disclosed without permission of:
 *    
 *  The Home Depot
 *  2455 Paces Ferry Road, N.W.
 *  Atlanta, GA 30339-4053
 *
 * File Name: Status.java
 * Application: RetailStaffing
 */

import java.io.Serializable;
import java.sql.Date;

import com.thoughtworks.xstream.annotations.XStreamAlias;

/**
 * This class represents an application status object from one of the following 
 * database tables:<br>
 * <br>
 * N_PHN_SCRN_STAT<br>
 * N_INTVW_RSPN_STAT<br>
 * N_INTVW_MAT_STAT<br>
 * N_REQN_STAT<br>
 * <br>
 * Using the XStream API to marshal this object into an XML will produce the following
 * format:<br>
 * <br>
 * <code>
 * &lt;status&gt;<br>
 * &nbsp;&lt;code&gt;/&lt;code&gt;<br>
 * &nbsp;&lt;languageCode&gt;/&lt;languageCode&gt;<br>
 * &nbsp;&lt;lastUpdateSystemUserId&gt;/&lt;lastUpdateSystemUserId&gt;<br>
 * &nbsp;&lt;lastUpdateTimestamp&gt;/&lt;lastUpdateTimestamp&gt;<br>
 * &nbsp;&lt;displayStatusCode&gt;/&lt;displayStatusCode&gt;<br>
 * &nbsp;&lt;shortStatusDescription&gt;/&lt;shortStatusDescription&gt;<br>
 * &nbsp;&lt;statusDescription&gt;/&lt;statusDescription&gt;<br>
 * &lt;/status&gt;<br>
 * </code>
 * <br>
 * Only non-null member variables will be present in the XML generated by
 * the XStream API.
 */
//Added the interface Comparable<Status> for sorting purpose - For Flex to HTML conversion - 13 May 2015
@XStreamAlias("status")
public class Status implements Serializable, Comparable<Status>
{
    private static final long serialVersionUID = -8361041506060766148L;
    
	/** status code */
	@XStreamAlias("code")
	private short mCode;
	/** description language identifier */
	@XStreamAlias("languageCode")
	private String mLangCd;
	/** id of the last user that updated this status */
	@XStreamAlias("lastUpdateSystemUserId")
	private String mLastUpdSysUsrId;
	/** last time this status was updated */
	@XStreamAlias("lastUpdateTimestamp")
	private Date mLastUpdTs;
	/** display status code */
	@XStreamAlias("displayStatusCode")
	private String mDispStatCd;
	/** short status description */
	@XStreamAlias("shortStatusDescription")
	private String mShortStatDesc;
	/** status description */
	@XStreamAlias("statusDescription")
	private String mStatDesc;
	
	/**
	 * Added as part of Flex to HTML conversion - 13 May 2015
	 * Description: To sort the Status object based upon the statDesc
	 */
	public int compareTo(Status status)
	{
		return mStatDesc.compareTo(status.getStatDesc());
	}
	
	/**
	 * @return status code
	 */
	public short getCode()
	{
		return mCode;
	} // end function getCode()
	
	/**
	 * @param code status code
	 */
	public void setCode(short code)
	{
		mCode = code;
	} // end function setCode()
	
	/**
	 * @return description language identifier 
	 */
	public String getLangCd()
	{
		return mLangCd;
	} // end function getLangCd()
	
	/**
	 * @param langCd description language identifier 
	 */
	public void setLangCd(String langCd)
	{
		mLangCd = langCd;
	} // end function setLangCd()
	
	/**
	 * @return id of the last user that updated this status
	 */
	public String getLastUpdSysUsrId()
	{
		return mLastUpdSysUsrId;
	} // end function getLastUpdSysUsrId()
	
	/**
	 * @param lastUpdSysUsrId id of the last user that updated this status
	 */
	public void setLastUpdSysUsrId(String lastUpdSysUsrId)
	{
		mLastUpdSysUsrId = lastUpdSysUsrId;
	} // end function setLastUpdSysUsrId()
	
	/**
	 * @return last time this status was updated
	 */
	public Date getLastUpdTs()
	{
		return mLastUpdTs;
	} // end function getLastUpdTs()
	
	/**
	 * @param lastUpdTs last time this status was updated
	 */
	public void setLastUpdTs(Date lastUpdTs)
	{
		mLastUpdTs = lastUpdTs;
	} // end function setLastUpdTs()
	
	/**
	 * @return display status code
	 */
	public String getDispStatCd()
	{
		return mDispStatCd;
	} // end function getDispStatCd()
	
	/**
	 * @param dispStatCd display status code
	 */
	public void setDispStatCd(String dispStatCd)
	{
		mDispStatCd = dispStatCd;
	} // end function setDispStatCd()
	
	/**
	 * @return short status description
	 */
	public String getShortStatDesc()
	{
		return mShortStatDesc;
	} // end function getShortStatDesc()
	
	/**
	 * @param shortStatDesc short status description
	 */
	public void setShortStatDesc(String shortStatDesc)
	{
		mShortStatDesc = shortStatDesc;
	} // end function setShortStatDesc()
	
	/**
	 * @return status description
	 */
	public String getStatDesc()
	{
		return mStatDesc;
	} // end function getStatDesc(0
	
	/**
	 * @param statDesc status description
	 */
	public void setStatDesc(String statDesc)
	{
		mStatDesc = statDesc;
	} // end function setStatDesc()

	/*
	 * (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
    public int hashCode()
    {
	    final int prime = 31;
	    int result = 1;
	    result = prime * result + mCode;
	    result = prime * result + ((mLangCd == null) ? 0 : mLangCd.hashCode());
	    return result;
    } // end function hashCode()

	/*
	 * (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
    public boolean equals(Object obj)
    {
		if(this == obj)
		{
			return true;
		} // end if(this == obj)
		
		if(obj == null)
		{
			return false;
		} // end if(obj == null)
		
		if(getClass() != obj.getClass())
		{
			return false;
		} // end if(getClass() != obj.getClass())
		
		Status other = (Status)obj;
		
		if(mCode != other.getCode())
		{
			return false;
		} // end if(mCode != other.getCode())
		
		if(mLangCd == null)
		{
			if(other.getLangCd() != null)
			{
				return false;
			} // end if(other.getLangCd() != null)
		} // end if(mLangCd == null)
		else if(!mLangCd.equals(other.getLangCd()))
		{
			return false;
		} // end else if(!mLangCd.equals(other.getLangCd()))

		return true;
    } // end function equals()
} // end class Status